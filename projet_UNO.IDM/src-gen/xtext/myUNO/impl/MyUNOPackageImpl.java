/**
 * generated by Xtext 2.23.0
 */
package xtext.myUNO.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import xtext.myUNO.Cartes_par_tour;
import xtext.myUNO.Contestation;
import xtext.myUNO.Final;
import xtext.myUNO.Gagnant;
import xtext.myUNO.Initial;
import xtext.myUNO.Main;
import xtext.myUNO.Manche;
import xtext.myUNO.MyUNOFactory;
import xtext.myUNO.MyUNOPackage;
import xtext.myUNO.Nombre_de_cartes;
import xtext.myUNO.Nombre_de_joueurs;
import xtext.myUNO.Temps;
import xtext.myUNO.Tour;
import xtext.myUNO.Variante;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MyUNOPackageImpl extends EPackageImpl implements MyUNOPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass varianteEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass initialEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass mancheEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass finalEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass gagnantEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum mainEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum tempsEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum nombre_de_joueursEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum tourEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum nombre_de_cartesEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum cartes_par_tourEEnum = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum contestationEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see xtext.myUNO.MyUNOPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private MyUNOPackageImpl()
  {
    super(eNS_URI, MyUNOFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link MyUNOPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static MyUNOPackage init()
  {
    if (isInited) return (MyUNOPackage)EPackage.Registry.INSTANCE.getEPackage(MyUNOPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredMyUNOPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    MyUNOPackageImpl theMyUNOPackage = registeredMyUNOPackage instanceof MyUNOPackageImpl ? (MyUNOPackageImpl)registeredMyUNOPackage : new MyUNOPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theMyUNOPackage.createPackageContents();

    // Initialize created meta-data
    theMyUNOPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theMyUNOPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(MyUNOPackage.eNS_URI, theMyUNOPackage);
    return theMyUNOPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getVariante()
  {
    return varianteEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getVariante_Name()
  {
    return (EAttribute)varianteEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariante_Debut()
  {
    return (EReference)varianteEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariante_Manche()
  {
    return (EReference)varianteEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getVariante_Fin()
  {
    return (EReference)varianteEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getInitial()
  {
    return initialEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInitial_Main()
  {
    return (EAttribute)initialEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInitial_Temps()
  {
    return (EAttribute)initialEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInitial_Secondes()
  {
    return (EAttribute)initialEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInitial_Nombre_cartes_en_main()
  {
    return (EAttribute)initialEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getInitial_Nombre_de_joueurs()
  {
    return (EAttribute)initialEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getManche()
  {
    return mancheEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getManche_Tour()
  {
    return (EAttribute)mancheEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getManche_Nombre_de_cartes()
  {
    return (EAttribute)mancheEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getManche_Cartes_par_tours()
  {
    return (EAttribute)mancheEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getManche_Carte_speciale()
  {
    return (EAttribute)mancheEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getManche_Contestation()
  {
    return (EAttribute)mancheEClass.getEStructuralFeatures().get(4);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getManche_Condition()
  {
    return (EAttribute)mancheEClass.getEStructuralFeatures().get(5);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getFinal()
  {
    return finalEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getFinal_Gagnant()
  {
    return (EReference)finalEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGagnant()
  {
    return gagnantEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGagnant_Nombre_de_manches_gagnees()
  {
    return (EAttribute)gagnantEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGagnant_Nombre()
  {
    return (EAttribute)gagnantEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGagnant_Points()
  {
    return (EAttribute)gagnantEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGagnant_Nombre_de_points()
  {
    return (EAttribute)gagnantEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getMain()
  {
    return mainEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getTemps()
  {
    return tempsEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getNombre_de_joueurs()
  {
    return nombre_de_joueursEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getTour()
  {
    return tourEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getNombre_de_cartes()
  {
    return nombre_de_cartesEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getCartes_par_tour()
  {
    return cartes_par_tourEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getContestation()
  {
    return contestationEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public MyUNOFactory getMyUNOFactory()
  {
    return (MyUNOFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    varianteEClass = createEClass(VARIANTE);
    createEAttribute(varianteEClass, VARIANTE__NAME);
    createEReference(varianteEClass, VARIANTE__DEBUT);
    createEReference(varianteEClass, VARIANTE__MANCHE);
    createEReference(varianteEClass, VARIANTE__FIN);

    initialEClass = createEClass(INITIAL);
    createEAttribute(initialEClass, INITIAL__MAIN);
    createEAttribute(initialEClass, INITIAL__TEMPS);
    createEAttribute(initialEClass, INITIAL__SECONDES);
    createEAttribute(initialEClass, INITIAL__NOMBRE_CARTES_EN_MAIN);
    createEAttribute(initialEClass, INITIAL__NOMBRE_DE_JOUEURS);

    mancheEClass = createEClass(MANCHE);
    createEAttribute(mancheEClass, MANCHE__TOUR);
    createEAttribute(mancheEClass, MANCHE__NOMBRE_DE_CARTES);
    createEAttribute(mancheEClass, MANCHE__CARTES_PAR_TOURS);
    createEAttribute(mancheEClass, MANCHE__CARTE_SPECIALE);
    createEAttribute(mancheEClass, MANCHE__CONTESTATION);
    createEAttribute(mancheEClass, MANCHE__CONDITION);

    finalEClass = createEClass(FINAL);
    createEReference(finalEClass, FINAL__GAGNANT);

    gagnantEClass = createEClass(GAGNANT);
    createEAttribute(gagnantEClass, GAGNANT__NOMBRE_DE_MANCHES_GAGNEES);
    createEAttribute(gagnantEClass, GAGNANT__NOMBRE);
    createEAttribute(gagnantEClass, GAGNANT__POINTS);
    createEAttribute(gagnantEClass, GAGNANT__NOMBRE_DE_POINTS);

    // Create enums
    mainEEnum = createEEnum(MAIN);
    tempsEEnum = createEEnum(TEMPS);
    nombre_de_joueursEEnum = createEEnum(NOMBRE_DE_JOUEURS);
    tourEEnum = createEEnum(TOUR);
    nombre_de_cartesEEnum = createEEnum(NOMBRE_DE_CARTES);
    cartes_par_tourEEnum = createEEnum(CARTES_PAR_TOUR);
    contestationEEnum = createEEnum(CONTESTATION);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(varianteEClass, Variante.class, "Variante", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getVariante_Name(), ecorePackage.getEString(), "name", null, 0, 1, Variante.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariante_Debut(), this.getInitial(), null, "debut", null, 0, 1, Variante.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariante_Manche(), this.getManche(), null, "manche", null, 0, 1, Variante.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getVariante_Fin(), this.getFinal(), null, "fin", null, 0, 1, Variante.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(initialEClass, Initial.class, "Initial", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getInitial_Main(), this.getMain(), "main", null, 0, 1, Initial.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInitial_Temps(), this.getTemps(), "temps", null, 0, 1, Initial.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInitial_Secondes(), ecorePackage.getEInt(), "secondes", null, 0, 1, Initial.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInitial_Nombre_cartes_en_main(), ecorePackage.getEInt(), "nombre_cartes_en_main", null, 0, 1, Initial.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getInitial_Nombre_de_joueurs(), this.getNombre_de_joueurs(), "nombre_de_joueurs", null, 0, 1, Initial.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(mancheEClass, Manche.class, "Manche", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getManche_Tour(), this.getTour(), "tour", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getManche_Nombre_de_cartes(), this.getNombre_de_cartes(), "nombre_de_cartes", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getManche_Cartes_par_tours(), this.getCartes_par_tour(), "cartes_par_tours", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getManche_Carte_speciale(), ecorePackage.getEString(), "carte_speciale", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getManche_Contestation(), this.getContestation(), "contestation", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getManche_Condition(), ecorePackage.getEString(), "condition", null, 0, 1, Manche.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(finalEClass, Final.class, "Final", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getFinal_Gagnant(), this.getGagnant(), null, "gagnant", null, 0, 1, Final.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(gagnantEClass, Gagnant.class, "Gagnant", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGagnant_Nombre_de_manches_gagnees(), ecorePackage.getEString(), "nombre_de_manches_gagnees", null, 0, 1, Gagnant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGagnant_Nombre(), ecorePackage.getEInt(), "nombre", null, 0, 1, Gagnant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGagnant_Points(), ecorePackage.getEString(), "points", null, 0, 1, Gagnant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getGagnant_Nombre_de_points(), ecorePackage.getEInt(), "nombre_de_points", null, 0, 1, Gagnant.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(mainEEnum, Main.class, "Main");
    addEEnumLiteral(mainEEnum, Main.VISIBLE);
    addEEnumLiteral(mainEEnum, Main.CACHEE);

    initEEnum(tempsEEnum, Temps.class, "Temps");
    addEEnumLiteral(tempsEEnum, Temps.VISIBLE);
    addEEnumLiteral(tempsEEnum, Temps.CACHEE);

    initEEnum(nombre_de_joueursEEnum, Nombre_de_joueurs.class, "Nombre_de_joueurs");
    addEEnumLiteral(nombre_de_joueursEEnum, Nombre_de_joueurs.DEUX);
    addEEnumLiteral(nombre_de_joueursEEnum, Nombre_de_joueurs.PLUS_QUE_2);

    initEEnum(tourEEnum, Tour.class, "Tour");
    addEEnumLiteral(tourEEnum, Tour.PASSER);
    addEEnumLiteral(tourEEnum, Tour.JOUER);

    initEEnum(nombre_de_cartesEEnum, Nombre_de_cartes.class, "Nombre_de_cartes");
    addEEnumLiteral(nombre_de_cartesEEnum, Nombre_de_cartes.UNE_CARTE);
    addEEnumLiteral(nombre_de_cartesEEnum, Nombre_de_cartes.TROIS_CARTES);

    initEEnum(cartes_par_tourEEnum, Cartes_par_tour.class, "Cartes_par_tour");
    addEEnumLiteral(cartes_par_tourEEnum, Cartes_par_tour.UNE);
    addEEnumLiteral(cartes_par_tourEEnum, Cartes_par_tour.PLUSIEURS);

    initEEnum(contestationEEnum, Contestation.class, "Contestation");
    addEEnumLiteral(contestationEEnum, Contestation.VALIDE);
    addEEnumLiteral(contestationEEnum, Contestation.FAUSSE);

    // Create resource
    createResource(eNS_URI);
  }

} //MyUNOPackageImpl

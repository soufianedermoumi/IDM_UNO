/**
 * generated by Xtext 2.23.0
 */
package xtext.myUNO.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import xtext.myUNO.Cartes_par_tour;
import xtext.myUNO.Contestation;
import xtext.myUNO.Manche;
import xtext.myUNO.MyUNOPackage;
import xtext.myUNO.Nombre_de_cartes;
import xtext.myUNO.Tour;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Manche</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link xtext.myUNO.impl.MancheImpl#getTour <em>Tour</em>}</li>
 *   <li>{@link xtext.myUNO.impl.MancheImpl#getNombre_de_cartes <em>Nombre de cartes</em>}</li>
 *   <li>{@link xtext.myUNO.impl.MancheImpl#getCartes_par_tours <em>Cartes par tours</em>}</li>
 *   <li>{@link xtext.myUNO.impl.MancheImpl#getCarte_speciale <em>Carte speciale</em>}</li>
 *   <li>{@link xtext.myUNO.impl.MancheImpl#getContestation <em>Contestation</em>}</li>
 *   <li>{@link xtext.myUNO.impl.MancheImpl#getCondition <em>Condition</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MancheImpl extends MinimalEObjectImpl.Container implements Manche
{
  /**
   * The default value of the '{@link #getTour() <em>Tour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTour()
   * @generated
   * @ordered
   */
  protected static final Tour TOUR_EDEFAULT = Tour.PASSER;

  /**
   * The cached value of the '{@link #getTour() <em>Tour</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTour()
   * @generated
   * @ordered
   */
  protected Tour tour = TOUR_EDEFAULT;

  /**
   * The default value of the '{@link #getNombre_de_cartes() <em>Nombre de cartes</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNombre_de_cartes()
   * @generated
   * @ordered
   */
  protected static final Nombre_de_cartes NOMBRE_DE_CARTES_EDEFAULT = Nombre_de_cartes.UNE_CARTE;

  /**
   * The cached value of the '{@link #getNombre_de_cartes() <em>Nombre de cartes</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNombre_de_cartes()
   * @generated
   * @ordered
   */
  protected Nombre_de_cartes nombre_de_cartes = NOMBRE_DE_CARTES_EDEFAULT;

  /**
   * The default value of the '{@link #getCartes_par_tours() <em>Cartes par tours</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCartes_par_tours()
   * @generated
   * @ordered
   */
  protected static final Cartes_par_tour CARTES_PAR_TOURS_EDEFAULT = Cartes_par_tour.UNE;

  /**
   * The cached value of the '{@link #getCartes_par_tours() <em>Cartes par tours</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCartes_par_tours()
   * @generated
   * @ordered
   */
  protected Cartes_par_tour cartes_par_tours = CARTES_PAR_TOURS_EDEFAULT;

  /**
   * The default value of the '{@link #getCarte_speciale() <em>Carte speciale</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCarte_speciale()
   * @generated
   * @ordered
   */
  protected static final String CARTE_SPECIALE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCarte_speciale() <em>Carte speciale</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCarte_speciale()
   * @generated
   * @ordered
   */
  protected String carte_speciale = CARTE_SPECIALE_EDEFAULT;

  /**
   * The default value of the '{@link #getContestation() <em>Contestation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContestation()
   * @generated
   * @ordered
   */
  protected static final Contestation CONTESTATION_EDEFAULT = Contestation.VALIDE;

  /**
   * The cached value of the '{@link #getContestation() <em>Contestation</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContestation()
   * @generated
   * @ordered
   */
  protected Contestation contestation = CONTESTATION_EDEFAULT;

  /**
   * The default value of the '{@link #getCondition() <em>Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected static final String CONDITION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCondition() <em>Condition</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCondition()
   * @generated
   * @ordered
   */
  protected String condition = CONDITION_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MancheImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyUNOPackage.Literals.MANCHE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Tour getTour()
  {
    return tour;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTour(Tour newTour)
  {
    Tour oldTour = tour;
    tour = newTour == null ? TOUR_EDEFAULT : newTour;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUNOPackage.MANCHE__TOUR, oldTour, tour));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Nombre_de_cartes getNombre_de_cartes()
  {
    return nombre_de_cartes;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNombre_de_cartes(Nombre_de_cartes newNombre_de_cartes)
  {
    Nombre_de_cartes oldNombre_de_cartes = nombre_de_cartes;
    nombre_de_cartes = newNombre_de_cartes == null ? NOMBRE_DE_CARTES_EDEFAULT : newNombre_de_cartes;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUNOPackage.MANCHE__NOMBRE_DE_CARTES, oldNombre_de_cartes, nombre_de_cartes));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Cartes_par_tour getCartes_par_tours()
  {
    return cartes_par_tours;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCartes_par_tours(Cartes_par_tour newCartes_par_tours)
  {
    Cartes_par_tour oldCartes_par_tours = cartes_par_tours;
    cartes_par_tours = newCartes_par_tours == null ? CARTES_PAR_TOURS_EDEFAULT : newCartes_par_tours;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUNOPackage.MANCHE__CARTES_PAR_TOURS, oldCartes_par_tours, cartes_par_tours));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCarte_speciale()
  {
    return carte_speciale;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCarte_speciale(String newCarte_speciale)
  {
    String oldCarte_speciale = carte_speciale;
    carte_speciale = newCarte_speciale;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUNOPackage.MANCHE__CARTE_SPECIALE, oldCarte_speciale, carte_speciale));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Contestation getContestation()
  {
    return contestation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setContestation(Contestation newContestation)
  {
    Contestation oldContestation = contestation;
    contestation = newContestation == null ? CONTESTATION_EDEFAULT : newContestation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUNOPackage.MANCHE__CONTESTATION, oldContestation, contestation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCondition()
  {
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCondition(String newCondition)
  {
    String oldCondition = condition;
    condition = newCondition;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyUNOPackage.MANCHE__CONDITION, oldCondition, condition));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyUNOPackage.MANCHE__TOUR:
        return getTour();
      case MyUNOPackage.MANCHE__NOMBRE_DE_CARTES:
        return getNombre_de_cartes();
      case MyUNOPackage.MANCHE__CARTES_PAR_TOURS:
        return getCartes_par_tours();
      case MyUNOPackage.MANCHE__CARTE_SPECIALE:
        return getCarte_speciale();
      case MyUNOPackage.MANCHE__CONTESTATION:
        return getContestation();
      case MyUNOPackage.MANCHE__CONDITION:
        return getCondition();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyUNOPackage.MANCHE__TOUR:
        setTour((Tour)newValue);
        return;
      case MyUNOPackage.MANCHE__NOMBRE_DE_CARTES:
        setNombre_de_cartes((Nombre_de_cartes)newValue);
        return;
      case MyUNOPackage.MANCHE__CARTES_PAR_TOURS:
        setCartes_par_tours((Cartes_par_tour)newValue);
        return;
      case MyUNOPackage.MANCHE__CARTE_SPECIALE:
        setCarte_speciale((String)newValue);
        return;
      case MyUNOPackage.MANCHE__CONTESTATION:
        setContestation((Contestation)newValue);
        return;
      case MyUNOPackage.MANCHE__CONDITION:
        setCondition((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyUNOPackage.MANCHE__TOUR:
        setTour(TOUR_EDEFAULT);
        return;
      case MyUNOPackage.MANCHE__NOMBRE_DE_CARTES:
        setNombre_de_cartes(NOMBRE_DE_CARTES_EDEFAULT);
        return;
      case MyUNOPackage.MANCHE__CARTES_PAR_TOURS:
        setCartes_par_tours(CARTES_PAR_TOURS_EDEFAULT);
        return;
      case MyUNOPackage.MANCHE__CARTE_SPECIALE:
        setCarte_speciale(CARTE_SPECIALE_EDEFAULT);
        return;
      case MyUNOPackage.MANCHE__CONTESTATION:
        setContestation(CONTESTATION_EDEFAULT);
        return;
      case MyUNOPackage.MANCHE__CONDITION:
        setCondition(CONDITION_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyUNOPackage.MANCHE__TOUR:
        return tour != TOUR_EDEFAULT;
      case MyUNOPackage.MANCHE__NOMBRE_DE_CARTES:
        return nombre_de_cartes != NOMBRE_DE_CARTES_EDEFAULT;
      case MyUNOPackage.MANCHE__CARTES_PAR_TOURS:
        return cartes_par_tours != CARTES_PAR_TOURS_EDEFAULT;
      case MyUNOPackage.MANCHE__CARTE_SPECIALE:
        return CARTE_SPECIALE_EDEFAULT == null ? carte_speciale != null : !CARTE_SPECIALE_EDEFAULT.equals(carte_speciale);
      case MyUNOPackage.MANCHE__CONTESTATION:
        return contestation != CONTESTATION_EDEFAULT;
      case MyUNOPackage.MANCHE__CONDITION:
        return CONDITION_EDEFAULT == null ? condition != null : !CONDITION_EDEFAULT.equals(condition);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (tour: ");
    result.append(tour);
    result.append(", nombre_de_cartes: ");
    result.append(nombre_de_cartes);
    result.append(", cartes_par_tours: ");
    result.append(cartes_par_tours);
    result.append(", carte_speciale: ");
    result.append(carte_speciale);
    result.append(", contestation: ");
    result.append(contestation);
    result.append(", condition: ");
    result.append(condition);
    result.append(')');
    return result.toString();
  }

} //MancheImpl

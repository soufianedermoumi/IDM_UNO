/*
 * generated by Xtext 2.23.0
 */
grammar InternalMyUNO;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import xtext.services.MyUNOGrammarAccess;

}
@parser::members {
	private MyUNOGrammarAccess grammarAccess;

	public void setGrammarAccess(MyUNOGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleVariante
entryRuleVariante
:
{ before(grammarAccess.getVarianteRule()); }
	 ruleVariante
{ after(grammarAccess.getVarianteRule()); } 
	 EOF 
;

// Rule Variante
ruleVariante 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarianteAccess().getGroup()); }
		(rule__Variante__Group__0)
		{ after(grammarAccess.getVarianteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInitial
entryRuleInitial
:
{ before(grammarAccess.getInitialRule()); }
	 ruleInitial
{ after(grammarAccess.getInitialRule()); } 
	 EOF 
;

// Rule Initial
ruleInitial 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInitialAccess().getGroup()); }
		(rule__Initial__Group__0)
		{ after(grammarAccess.getInitialAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleManche
entryRuleManche
:
{ before(grammarAccess.getMancheRule()); }
	 ruleManche
{ after(grammarAccess.getMancheRule()); } 
	 EOF 
;

// Rule Manche
ruleManche 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMancheAccess().getGroup()); }
		(rule__Manche__Group__0)
		{ after(grammarAccess.getMancheAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFinal
entryRuleFinal
:
{ before(grammarAccess.getFinalRule()); }
	 ruleFinal
{ after(grammarAccess.getFinalRule()); } 
	 EOF 
;

// Rule Final
ruleFinal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFinalAccess().getGroup()); }
		(rule__Final__Group__0)
		{ after(grammarAccess.getFinalAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGagnant
entryRuleGagnant
:
{ before(grammarAccess.getGagnantRule()); }
	 ruleGagnant
{ after(grammarAccess.getGagnantRule()); } 
	 EOF 
;

// Rule Gagnant
ruleGagnant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGagnantAccess().getAlternatives()); }
		(rule__Gagnant__Alternatives)
		{ after(grammarAccess.getGagnantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Main
ruleMain
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainAccess().getAlternatives()); }
		(rule__Main__Alternatives)
		{ after(grammarAccess.getMainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Temps
ruleTemps
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempsAccess().getAlternatives()); }
		(rule__Temps__Alternatives)
		{ after(grammarAccess.getTempsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Nombre_de_joueurs
ruleNombre_de_joueurs
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNombre_de_joueursAccess().getAlternatives()); }
		(rule__Nombre_de_joueurs__Alternatives)
		{ after(grammarAccess.getNombre_de_joueursAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Tour
ruleTour
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTourAccess().getAlternatives()); }
		(rule__Tour__Alternatives)
		{ after(grammarAccess.getTourAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Nombre_de_cartes
ruleNombre_de_cartes
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNombre_de_cartesAccess().getAlternatives()); }
		(rule__Nombre_de_cartes__Alternatives)
		{ after(grammarAccess.getNombre_de_cartesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Cartes_par_tour
ruleCartes_par_tour
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCartes_par_tourAccess().getAlternatives()); }
		(rule__Cartes_par_tour__Alternatives)
		{ after(grammarAccess.getCartes_par_tourAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Contestation
ruleContestation
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContestationAccess().getAlternatives()); }
		(rule__Contestation__Alternatives)
		{ after(grammarAccess.getContestationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGagnantAccess().getGroup_0()); }
		(rule__Gagnant__Group_0__0)
		{ after(grammarAccess.getGagnantAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getGagnantAccess().getGroup_1()); }
		(rule__Gagnant__Group_1__0)
		{ after(grammarAccess.getGagnantAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Main__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainAccess().getVisibleEnumLiteralDeclaration_0()); }
		('visible')
		{ after(grammarAccess.getMainAccess().getVisibleEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getMainAccess().getCacheeEnumLiteralDeclaration_1()); }
		('cachee')
		{ after(grammarAccess.getMainAccess().getCacheeEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Temps__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTempsAccess().getVisibleEnumLiteralDeclaration_0()); }
		('limit\u00E9')
		{ after(grammarAccess.getTempsAccess().getVisibleEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTempsAccess().getCacheeEnumLiteralDeclaration_1()); }
		('non_limit\u00E9')
		{ after(grammarAccess.getTempsAccess().getCacheeEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Nombre_de_joueurs__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNombre_de_joueursAccess().getDeuxEnumLiteralDeclaration_0()); }
		('2')
		{ after(grammarAccess.getNombre_de_joueursAccess().getDeuxEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNombre_de_joueursAccess().getPlus_que_2EnumLiteralDeclaration_1()); }
		('>2')
		{ after(grammarAccess.getNombre_de_joueursAccess().getPlus_que_2EnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Tour__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTourAccess().getPasserEnumLiteralDeclaration_0()); }
		('passer')
		{ after(grammarAccess.getTourAccess().getPasserEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTourAccess().getJouerEnumLiteralDeclaration_1()); }
		('jouer')
		{ after(grammarAccess.getTourAccess().getJouerEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Nombre_de_cartes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNombre_de_cartesAccess().getUne_carteEnumLiteralDeclaration_0()); }
		('1')
		{ after(grammarAccess.getNombre_de_cartesAccess().getUne_carteEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getNombre_de_cartesAccess().getTrois_cartesEnumLiteralDeclaration_1()); }
		('3')
		{ after(grammarAccess.getNombre_de_cartesAccess().getTrois_cartesEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Cartes_par_tour__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCartes_par_tourAccess().getUneEnumLiteralDeclaration_0()); }
		('une carte \u00E0 la fois')
		{ after(grammarAccess.getCartes_par_tourAccess().getUneEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCartes_par_tourAccess().getPlusieursEnumLiteralDeclaration_1()); }
		('plusieurs cartes \u00E0 la fois')
		{ after(grammarAccess.getCartes_par_tourAccess().getPlusieursEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contestation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContestationAccess().getValideEnumLiteralDeclaration_0()); }
		('valide')
		{ after(grammarAccess.getContestationAccess().getValideEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getContestationAccess().getFausseEnumLiteralDeclaration_1()); }
		('fausse')
		{ after(grammarAccess.getContestationAccess().getFausseEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variante__Group__0__Impl
	rule__Variante__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarianteAccess().getVarianteKeyword_0()); }
	'variante'
	{ after(grammarAccess.getVarianteAccess().getVarianteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variante__Group__1__Impl
	rule__Variante__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarianteAccess().getNameAssignment_1()); }
	(rule__Variante__NameAssignment_1)
	{ after(grammarAccess.getVarianteAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variante__Group__2__Impl
	rule__Variante__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarianteAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getVarianteAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variante__Group__3__Impl
	rule__Variante__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarianteAccess().getDebutAssignment_3()); }
	(rule__Variante__DebutAssignment_3)
	{ after(grammarAccess.getVarianteAccess().getDebutAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variante__Group__4__Impl
	rule__Variante__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarianteAccess().getMancheAssignment_4()); }
	(rule__Variante__MancheAssignment_4)
	{ after(grammarAccess.getVarianteAccess().getMancheAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variante__Group__5__Impl
	rule__Variante__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarianteAccess().getFinAssignment_5()); }
	(rule__Variante__FinAssignment_5)
	{ after(grammarAccess.getVarianteAccess().getFinAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variante__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarianteAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getVarianteAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initial__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__0__Impl
	rule__Initial__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getDebutKeyword_0()); }
	'Debut'
	{ after(grammarAccess.getInitialAccess().getDebutKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__1__Impl
	rule__Initial__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getInitialAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__2__Impl
	rule__Initial__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getMainAssignment_2()); }
	(rule__Initial__MainAssignment_2)
	{ after(grammarAccess.getInitialAccess().getMainAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__3__Impl
	rule__Initial__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getTempsAssignment_3()); }
	(rule__Initial__TempsAssignment_3)
	{ after(grammarAccess.getInitialAccess().getTempsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__4__Impl
	rule__Initial__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getGroup_4()); }
	(rule__Initial__Group_4__0)?
	{ after(grammarAccess.getInitialAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__5__Impl
	rule__Initial__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getNombre_cartes_en_mainKeyword_5()); }
	'nombre_cartes_en_main'
	{ after(grammarAccess.getInitialAccess().getNombre_cartes_en_mainKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__6__Impl
	rule__Initial__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getNombre_cartes_en_mainAssignment_6()); }
	(rule__Initial__Nombre_cartes_en_mainAssignment_6)
	{ after(grammarAccess.getInitialAccess().getNombre_cartes_en_mainAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__7__Impl
	rule__Initial__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getNombre_de_joueursKeyword_7()); }
	'nombre_de_joueurs'
	{ after(grammarAccess.getInitialAccess().getNombre_de_joueursKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__8__Impl
	rule__Initial__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getNombre_de_joueursAssignment_8()); }
	(rule__Initial__Nombre_de_joueursAssignment_8)
	{ after(grammarAccess.getInitialAccess().getNombre_de_joueursAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getSemicolonKeyword_9()); }
	';'
	{ after(grammarAccess.getInitialAccess().getSemicolonKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Initial__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group_4__0__Impl
	rule__Initial__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getTempsKeyword_4_0()); }
	'temps:'
	{ after(grammarAccess.getInitialAccess().getTempsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Initial__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInitialAccess().getSecondesAssignment_4_1()); }
	(rule__Initial__SecondesAssignment_4_1)
	{ after(grammarAccess.getInitialAccess().getSecondesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Manche__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group__0__Impl
	rule__Manche__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getMancheKeyword_0()); }
	'Manche'
	{ after(grammarAccess.getMancheAccess().getMancheKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group__1__Impl
	rule__Manche__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getMancheAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group__2__Impl
	rule__Manche__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getGroup_2()); }
	(rule__Manche__Group_2__0)?
	{ after(grammarAccess.getMancheAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group__3__Impl
	rule__Manche__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getGroup_3()); }
	(rule__Manche__Group_3__0)?
	{ after(grammarAccess.getMancheAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group__4__Impl
	rule__Manche__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getGroup_4()); }
	(rule__Manche__Group_4__0)?
	{ after(grammarAccess.getMancheAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group__5__Impl
	rule__Manche__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getGroup_5()); }
	(rule__Manche__Group_5__0)?
	{ after(grammarAccess.getMancheAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group__6__Impl
	rule__Manche__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getFinKeyword_6()); }
	'fin'
	{ after(grammarAccess.getMancheAccess().getFinKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group__7__Impl
	rule__Manche__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getConditionAssignment_7()); }
	(rule__Manche__ConditionAssignment_7)
	{ after(grammarAccess.getMancheAccess().getConditionAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getSemicolonKeyword_8()); }
	';'
	{ after(grammarAccess.getMancheAccess().getSemicolonKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Manche__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_2__0__Impl
	rule__Manche__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getPiocheKeyword_2_0()); }
	'pioche'
	{ after(grammarAccess.getMancheAccess().getPiocheKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_2__1__Impl
	rule__Manche__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getMancheAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_2__2__Impl
	rule__Manche__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getTourAssignment_2_2()); }
	(rule__Manche__TourAssignment_2_2)
	{ after(grammarAccess.getMancheAccess().getTourAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_2__3__Impl
	rule__Manche__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getRightParenthesisKeyword_2_3()); }
	')'
	{ after(grammarAccess.getMancheAccess().getRightParenthesisKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_2__4__Impl
	rule__Manche__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getLeftParenthesisKeyword_2_4()); }
	'('
	{ after(grammarAccess.getMancheAccess().getLeftParenthesisKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_2__5__Impl
	rule__Manche__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getNombre_de_cartesAssignment_2_5()); }
	(rule__Manche__Nombre_de_cartesAssignment_2_5)
	{ after(grammarAccess.getMancheAccess().getNombre_de_cartesAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_2__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getRightParenthesisKeyword_2_6()); }
	')'
	{ after(grammarAccess.getMancheAccess().getRightParenthesisKeyword_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Manche__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_3__0__Impl
	rule__Manche__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getCartes_par_tourKeyword_3_0()); }
	'cartes_par_tour'
	{ after(grammarAccess.getMancheAccess().getCartes_par_tourKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_3__1__Impl
	rule__Manche__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getLeftParenthesisKeyword_3_1()); }
	'('
	{ after(grammarAccess.getMancheAccess().getLeftParenthesisKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_3__2__Impl
	rule__Manche__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getCartes_par_toursAssignment_3_2()); }
	(rule__Manche__Cartes_par_toursAssignment_3_2)
	{ after(grammarAccess.getMancheAccess().getCartes_par_toursAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getRightParenthesisKeyword_3_3()); }
	')'
	{ after(grammarAccess.getMancheAccess().getRightParenthesisKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Manche__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_4__0__Impl
	rule__Manche__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getCarte_spCialeKeyword_4_0()); }
	'carte_sp\u00E9ciale'
	{ after(grammarAccess.getMancheAccess().getCarte_spCialeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getCarte_specialeAssignment_4_1()); }
	(rule__Manche__Carte_specialeAssignment_4_1)
	{ after(grammarAccess.getMancheAccess().getCarte_specialeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Manche__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_5__0__Impl
	rule__Manche__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getContestationKeyword_5_0()); }
	'Contestation'
	{ after(grammarAccess.getMancheAccess().getContestationKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_5__1__Impl
	rule__Manche__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getLeftParenthesisKeyword_5_1()); }
	'('
	{ after(grammarAccess.getMancheAccess().getLeftParenthesisKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_5__2__Impl
	rule__Manche__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getContestationAssignment_5_2()); }
	(rule__Manche__ContestationAssignment_5_2)
	{ after(grammarAccess.getMancheAccess().getContestationAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Manche__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMancheAccess().getRightParenthesisKeyword_5_3()); }
	')'
	{ after(grammarAccess.getMancheAccess().getRightParenthesisKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Final__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Final__Group__0__Impl
	rule__Final__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalAccess().getGagnantAvecKeyword_0()); }
	'gagnant avec'
	{ after(grammarAccess.getFinalAccess().getGagnantAvecKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Final__Group__1__Impl
	rule__Final__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getFinalAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Final__Group__2__Impl
	rule__Final__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalAccess().getGagnantAssignment_2()); }
	(rule__Final__GagnantAssignment_2)
	{ after(grammarAccess.getFinalAccess().getGagnantAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Final__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFinalAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getFinalAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gagnant__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gagnant__Group_0__0__Impl
	rule__Gagnant__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGagnantAccess().getNombre_de_manches_gagneesAssignment_0_0()); }
	(rule__Gagnant__Nombre_de_manches_gagneesAssignment_0_0)
	{ after(grammarAccess.getGagnantAccess().getNombre_de_manches_gagneesAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gagnant__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGagnantAccess().getNombreAssignment_0_1()); }
	(rule__Gagnant__NombreAssignment_0_1)
	{ after(grammarAccess.getGagnantAccess().getNombreAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Gagnant__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gagnant__Group_1__0__Impl
	rule__Gagnant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGagnantAccess().getPointsAssignment_1_0()); }
	(rule__Gagnant__PointsAssignment_1_0)
	{ after(grammarAccess.getGagnantAccess().getPointsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Gagnant__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGagnantAccess().getNombre_de_pointsAssignment_1_1()); }
	(rule__Gagnant__Nombre_de_pointsAssignment_1_1)
	{ after(grammarAccess.getGagnantAccess().getNombre_de_pointsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variante__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarianteAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getVarianteAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__DebutAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarianteAccess().getDebutInitialParserRuleCall_3_0()); }
		ruleInitial
		{ after(grammarAccess.getVarianteAccess().getDebutInitialParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__MancheAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarianteAccess().getMancheMancheParserRuleCall_4_0()); }
		ruleManche
		{ after(grammarAccess.getVarianteAccess().getMancheMancheParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variante__FinAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarianteAccess().getFinFinalParserRuleCall_5_0()); }
		ruleFinal
		{ after(grammarAccess.getVarianteAccess().getFinFinalParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__MainAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getMainMainEnumRuleCall_2_0()); }
		ruleMain
		{ after(grammarAccess.getInitialAccess().getMainMainEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__TempsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getTempsTempsEnumRuleCall_3_0()); }
		ruleTemps
		{ after(grammarAccess.getInitialAccess().getTempsTempsEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__SecondesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getSecondesINTTerminalRuleCall_4_1_0()); }
		RULE_INT
		{ after(grammarAccess.getInitialAccess().getSecondesINTTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Nombre_cartes_en_mainAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getNombre_cartes_en_mainINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getInitialAccess().getNombre_cartes_en_mainINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Initial__Nombre_de_joueursAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInitialAccess().getNombre_de_joueursNombre_de_joueursEnumRuleCall_8_0()); }
		ruleNombre_de_joueurs
		{ after(grammarAccess.getInitialAccess().getNombre_de_joueursNombre_de_joueursEnumRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__TourAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMancheAccess().getTourTourEnumRuleCall_2_2_0()); }
		ruleTour
		{ after(grammarAccess.getMancheAccess().getTourTourEnumRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Nombre_de_cartesAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMancheAccess().getNombre_de_cartesNombre_de_cartesEnumRuleCall_2_5_0()); }
		ruleNombre_de_cartes
		{ after(grammarAccess.getMancheAccess().getNombre_de_cartesNombre_de_cartesEnumRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Cartes_par_toursAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMancheAccess().getCartes_par_toursCartes_par_tourEnumRuleCall_3_2_0()); }
		ruleCartes_par_tour
		{ after(grammarAccess.getMancheAccess().getCartes_par_toursCartes_par_tourEnumRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__Carte_specialeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMancheAccess().getCarte_specialeSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMancheAccess().getCarte_specialeSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__ContestationAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMancheAccess().getContestationContestationEnumRuleCall_5_2_0()); }
		ruleContestation
		{ after(grammarAccess.getMancheAccess().getContestationContestationEnumRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Manche__ConditionAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMancheAccess().getConditionSTRINGTerminalRuleCall_7_0()); }
		RULE_STRING
		{ after(grammarAccess.getMancheAccess().getConditionSTRINGTerminalRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Final__GagnantAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFinalAccess().getGagnantGagnantParserRuleCall_2_0()); }
		ruleGagnant
		{ after(grammarAccess.getFinalAccess().getGagnantGagnantParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__Nombre_de_manches_gagneesAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGagnantAccess().getNombre_de_manches_gagneesManches_gagneEsKeyword_0_0_0()); }
		(
			{ before(grammarAccess.getGagnantAccess().getNombre_de_manches_gagneesManches_gagneEsKeyword_0_0_0()); }
			'manches_gagne\u00E9es'
			{ after(grammarAccess.getGagnantAccess().getNombre_de_manches_gagneesManches_gagneEsKeyword_0_0_0()); }
		)
		{ after(grammarAccess.getGagnantAccess().getNombre_de_manches_gagneesManches_gagneEsKeyword_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__NombreAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGagnantAccess().getNombreINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getGagnantAccess().getNombreINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__PointsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGagnantAccess().getPointsAvecLesPointsKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getGagnantAccess().getPointsAvecLesPointsKeyword_1_0_0()); }
			'avec les points'
			{ after(grammarAccess.getGagnantAccess().getPointsAvecLesPointsKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getGagnantAccess().getPointsAvecLesPointsKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Gagnant__Nombre_de_pointsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGagnantAccess().getNombre_de_pointsINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getGagnantAccess().getNombre_de_pointsINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
